name: Python CI/CD with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Install dependencies (if any)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-python-app .

      
      # Verifying the right credentials
      - name: Display the Variables
        run: |
          echo Docker User:  ${{ secrets.DOCKER_USERNAME }} 
          echo Docker PW:  ${{ secrets.DOCKER_PASSWORD }} 

      # Optionally push the Docker image to DockerHub (replace with your own credentials)
      - name: Push Docker image to DockerHub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker tag my-python-app:latest ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest

      # Store Docker image as an artifact (optional)
      - name: Save Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-python-app-image
          path: ./my-python-app.tar

      # Build Binary (optional if you want to generate a binary instead of a Docker image)
      - name: Install PyInstaller
        run: |
          pip install pyinstaller
      - name: Build Binary (optional)
        run: |
          pyinstaller --onefile hello.py
      - name: Upload Binary as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: my-python-binary
          path: dist/hello
